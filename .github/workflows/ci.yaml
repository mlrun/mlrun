name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Lint code (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      id: cache-dev-deps
      with:
        path: .venv
        key: venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-
          venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-
          venv-dev-${{ runner.os }}-py-
          venv-dev-${{ runner.os }}-
    - name: Install dependencies
      if: steps.cache-dev-deps.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt
    - name: Lint
      run: make lint
  tests:
    name: Run Dockerized Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Dockerized tests
      run: make test-dockerized
    - name: Generate HTML docs
      run: make html-docs-dockerized
    - name: Upload generated docs
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs/_build/html
