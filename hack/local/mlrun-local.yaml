# example Kubernetes spec, should add volume for persisting data
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlrun-api
  labels:
    app: mlrun-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlrun-api
  template:
    metadata:
      labels:
        app: mlrun-api
    spec:
      containers:
      - name: mlrun-api
        image: mlrun/mlrun-api:latest
        imagePullPolicy: Always
        env:
        - name: MLRUN_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MLRUN_LOG_LEVEL
          value: ERROR
        - name: MLRUN_HTTPDB__DB_TYPE
          value: filerundb
        - name: MLRUN_HTTPDB__DIRPATH
          value: "/mlrun/db"
        - name: MLRUN_HTTPDB__DATA_VOLUME
          value: "/home/jovyan/data"
        - name: DEFAULT_DOCKER_REGISTRY
          value: "<set default registry url>"
        - name: DEFAULT_DOCKER_SECRET
          value: ""
        ports:
        - containerPort: 8080
        command: ["python", "-m", "mlrun", "db"]
        args: []
        volumeMounts:
        - mountPath: /home/jovyan/data
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: nfsvol
      serviceAccountName: mlrun-api
---
kind: Service
apiVersion: v1
metadata:
  name: mlrun-api
spec:
  type: NodePort
  selector:
    app: mlrun-api
  ports:
  - protocol: TCP
    nodePort: 30060
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlrun-ui
  labels:
    app: mlrun-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlrun-ui
  template:
    metadata:
      labels:
        app: mlrun-ui
    spec:
      containers:
      - name: mlrun-ui
        image:  quay.io/iguazio/mlrun-ui:latest
        imagePullPolicy: Always
        env:
        - name: MLRUN_API_PROXY_URL
          value: http://mlrun-api:8080
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: mlrun-ui
spec:
  type: NodePort
  selector:
    app: mlrun-ui
  ports:
  - protocol: TCP
    nodePort: 30068
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mlrun-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mlrun-api-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  - services
  verbs:
  - '*'
- apiGroups:
  - kubeflow.org
  resources:
  - mpijobs
  verbs:
  - '*'
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - sparkapplications
  - scheduledsparkapplications
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mlrun-api-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mlrun-api-role
subjects:
- kind: ServiceAccount
  name: mlrun-api
