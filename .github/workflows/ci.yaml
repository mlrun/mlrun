name: CI

on:
  pull_request:
    branches:
    - development
    - '[0-9]+.[0-9]+.x'

  # Run CI also on push to master
  push:
    branches:
    - master

jobs:
  lint:
    name: Lint code (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/dev-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt
    - name: Lint
      run: make lint

  tests:
    name: Run Dockerized Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Dockerized tests
      run: MLRUN_DOCKER_REGISTRY=ghcr.io/ MLRUN_DOCKER_CACHE_FROM_TAG=unstable-cache make test-dockerized

  docs:
    name: Build Project Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate HTML docs
        run: MLRUN_DOCKER_REGISTRY=ghcr.io/ MLRUN_DOCKER_CACHE_FROM_TAG=unstable-cache make html-docs-dockerized
      - name: Upload generated docs
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs/_build/html
