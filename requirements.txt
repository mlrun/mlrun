# >=1.25.4, <1.27 from botocore 1.19.28 inside boto3 1.16.28 inside nuclio-jupyter 0.8.8
urllib3>=1.25.4, <1.27
# >=3.0.2 from requests 2.25.1 <4.0 from aiohttp 3.7.3, requests is <5, so without the upbound there's a conflict
chardet>=3.0.2, <4.0
GitPython~=3.0
aiohttp>=3.6,<3.8
click~=7.0
# kfp ~1.0.1 resolves to 1.0.4, which has google-auth>=1.6.1 which resolves to 2.x which is incompatible with
# google-cloud-storage (from kfp) that is >=1.13.0 and resolves to 1.42.0) and has google-api-core that is
# >=1.29.0,<3.0dev and resolves to 1.31.2 which has google-auth >=1.25.0,<2.0dev which is incompatible
google-auth>=1.25.0, <2.0dev
# 3.0 iguazio system uses 1.0.1, since the sdk is still mark as beta (and not stable) I'm limiting to only patch changes
kfp~=1.0.1
nest-asyncio~=1.0
# <7.17 cause from 7.17 python 3.6 is not supported (and models-gpu-legacy image build fail)
ipython~=7.0, <7.17
# nuclio-jupyter has notebook>=5.2.0 which resolves to 6.4.0 which has ipykernel without specifier, which from 0.6.0
# has ipython>=7.23.1 which is incompatible with our ipython specifiers, therefore instsalling ipykernel 5.x before
# nuclio-jupyter
ipykernel~=5.0
nuclio-jupyter~=0.8.22
# >=1.16.5 from pandas 1.2.1 and <1.20.0 because we're hitting the same issue as this one
# https://github.com/Azure/MachineLearningNotebooks/issues/1314
numpy>=1.16.5, <1.22.0
pandas~=1.2; python_version >= '3.7'
pandas~=1.0; python_version < '3.7'
# used as a the engine for parquet files by pandas
pyarrow>=1,<6
pyyaml~=5.1
requests~=2.22
sqlalchemy~=1.3
tabulate>=0.8.0, <=0.8.3
v3io~=0.5.13
pydantic~=1.5
# <3.4 since 3.4 can't be installed on pip 18.1
orjson>=3,<3.4
importlib-resources~=5.0; python_version < '3.7'
# 1.6.0 introduced some bug and we were just about to release a version TODO: find the root cause for the problems
alembic~=1.4,<1.6.0
mergedeep~=1.3
# 3.2 iguazio system uses 0.9.x - limiting to only patch changes
v3io-frames~=0.10.2
semver~=2.13
dask~=2.12
# dask-kubernetes 0.11.0 has distributed>=2.5.2, but after 2.30.1 they moved to CalVer and released 2020.12.0
# so without our limitation to <3, 2020.12.0 is installed which is incompatible since it has dask>=2020.12.0 while ours
# is ~=2.12
# TODO: dask-kubernetes will probably release 0.11.1 with a fix for this soon and this could be removed
# (19.01.2021) - >=2.5.2, <3 in the client resolves to 2.30.1, and mlrun/ml-models comes pre-installed with 2.11.0 which
# is fine for that specifier, but they don't work together (couldn't find why) only 2.23 and up is working, so putting
# min bound of 2.23
distributed>=2.23, <3
# 3.0 iguazio system is running k8s 1.17 so ideally we would use 17.X, but kfp limiting to <12.0
kubernetes~=11.0
# TODO: move to API requirements (shouldn't really be here, the sql run db using the API sqldb is preventing us from
#  separating the SDK and API code) (referring to humanfriendly and fastapi)
humanfriendly~=8.2
# fastapi fail to present docs. happen due to fastapi changes in 0.68.0
# the breaking PR is: https://github.com/tiangolo/fastapi/commit/97fa743ecb5a716fa0223a7463cb83f3f0df494c
# the bug report on: https://github.com/tiangolo/fastapi/issues/3782
fastapi~=0.67.0
fsspec~=2021.8.1
v3iofs~=0.1.7
# 3.4 and above failed builidng in some images - see https://github.com/pyca/cryptography/issues/5771
cryptography~=3.0, <3.4
# In 0.8.12 the requirements loosen too much so pip resolver never finds a resolution
storey~=0.9.1; python_version >= '3.7'
deepdiff~=5.0
pymysql~=1.0
inflection~=0.5.0
